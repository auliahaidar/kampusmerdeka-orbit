# -*- coding: utf-8 -*-
"""Uji Hipotesis_student.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jbaQLLwVT9XhtUXp1z8Xi6FpZyMruSEq

Sebelum lanjut, untuk pengguna google colab harap lakukan save a copy in drive dulu ya. Di latihan ini kita akan bahas contoh kasus :     

1. Uji beda 2 kelompok berhubungan
2. Uji beda 2 kelompok independent
3. Uji beda lebih dari 2 kelompok

keduanya akan dilakukan secara parametrik dan nonparametrik
"""

#Import all library needed

import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
import numpy as np
from scipy import stats

"""# Uji beda 2 kelompok berhubungan

Diketahui nilai mahasiswa saat belajar offline dan online sebagai berikut (dalam skala 10)

offline = [10, 9, 7, 8, 7, 8, 9, 9, 8, 7, 7, 7, 8, 8, 9, 8, 8, 8, 8, 8, 9]

online = [8, 8, 7, 7, 6, 7, 7, 7, 7, 6, 6, 6, 6, 7, 8, 7, 8, 7, 8, 7, 8]
"""

#Data
offline = np.array([10, 9, 7, 8, 7, 8, 9, 9, 8, 7, 7, 7, 8, 8, 9, 8, 8, 8, 8, 8, 9])
online = np.array([8, 8, 7, 7, 6, 7, 7, 7, 7, 6, 6, 6, 6, 7, 8, 7, 8, 7, 8, 7, 8])

"""## Uji Normalitas
Ho = data berdistribusi normal

Ha = data tidak berdistribusi normal
"""

#Dengan histogram
sns.distplot(offline)

#Dengan histogram
sns.distplot(online)

"""Berdasarkan histogram, data berbentuk seperti lonceng dengan rata-rata pas di tengah, sehingga bisa kita simpulkan data berdistribusi normal berdasarkan histogram, mari coba dengan uji kolmogorov smirnov"""

#Uji Kolmogorov-Smirnov
z_score_offline = stats.zscore(offline)
z_score_online = stats.zscore(online)
print('uji kolmogorov smirnov data offline = ', stats.kstest(z_score_offline, "norm"))
print('uji kolmogorov smirnov data online = ', stats.kstest(z_score_online, "norm"))

"""Karena kedua nilai p-value > 0.05, maka Ho diterima, data berdistribusi normal

## Paired Sample T-Test (Parametrik)

Ho = Tidak ada perbedaan yang signifikan (keduanya sama)

Ha = ada perbedaan yang signifikan (artinya metode pembelajaran offline/online mempengaruhi nilai siswa)
"""

t_value = stats.ttest_rel(offline, online)
print('hasil uji t: ', t_value)

"""karena p-value = 5.9 x 10^(-7) < 0.05, maka Ho ditolak, terdapat perbedaan yang signifikan dari nilai mahasiswa, metode pembelajaran offline/online berpengaruh signifikan terhadap nilai siswa

## Uji Wilcoxon (nonparametrik)

Misalkan datanya tidak berdistribusi normal, uji beda 2 kelompok berhubungan dapat dilakukan dengan uji wilcoxon. Caranya
"""

d = offline - online
stats.wilcoxon(d)

"""karena p-value = 7.897 x 10^(-5) < 0.05, maka Ho ditolak, terdapat perbedaan yang signifikan dari nilai mahasiswa, metode pembelajaran offline/online berpengaruh signifikan terhadap nilai siswa

# Uji Beda 2 kelompok independent

Misalkan seorang CEO kafe ingin mengetahui apakah ada perbedaan yang signifikan antara jumlah pengunjung kafe di wilayah A dan B selama 2 minggu terakhir

A = [27, 29, 27, 32, 34, 38, 39, 27, 30, 32, 34, 36, 38, 40]

B = [29, 30, 29, 27, 30, 40, 39, 28, 30, 26, 27, 28, 39, 39]
"""

A = np.array([27, 29, 27, 32, 34, 38, 39, 27, 30, 32, 34, 36, 38, 40])
B = np.array([28, 30, 29, 35, 34, 37, 39, 28, 30, 32, 33, 35, 39, 39])

"""## Latihan 1
Coba lihat lagi cara uji normalitas di atas, coba lakukan pada data A dan B

## Uji Normalitas
Ho = data berdistribusi normal

Ha = data tidak berdistribusi normal
"""

#Cek Normalitas A Dengan histogram
#Type your code here

#Cek Normalitas B Dengan histogram
#Type your code here

#Uji Kolmogorov-Smirnov
#Type your code here

"""Apakah keduanya berdistribusi normal? bagaimana kamu mengetahuinya?

## Independent Sample T-Test (Parametrik)
Ho = Tidak ada perbedaan yang signifikan (keduanya sama)

Ha = ada perbedaan yang signifikan (artinya lokasi kafe berpengaruh signifikan terhadap jumlah pengunjung)
"""

t_value = stats.ttest_ind(A, B)
print('hasil uji t: ', t_value)

"""Nilai p-value = 0.83 > 0.05, artinya Ho diterima, tidak terdapat perbedaan yang signifikan antara jumlah pengunjung kafe wilayah A dan B, berarti lokasi kafe tidak berpengaruh signifikan terhadap jumlah pengunjung

## Uji Mann-Whitney
Misalkan datanya tidak berdistribusi normal, uji beda 2 kelompok independent dapat dilakukan dengan uji Mann-whitney. Caranya
"""

stats.mannwhitneyu(A, B)

"""## Latihan 2
Tulis kesimpulanmu disini apakah Ho diterima atau ditolak dan apa artinya

# Uji Beda lebih dari 2 kelompok

Dalam statistik parametrik, nama metodenya adalah ANOVA. ANOVA memiliki 2 asumsi :    
1. Data Berdistribusi Normal
2. Varians data homongen

**Kasus**

Misalkan saat ini kamu adalah menteri pendidikan yang ingin mengetahui apakah kualitas pendidikan di negara ini sudah merata atau belum. Daerah dibagi menjadi kota besar di wilayah berat, kota kecil di barat, ibukota, kota besar di wilayah timur, dan kota kecil di timur. Analisa ini dilakukan berdasarkan nilai ujian akhir SMA
"""

final_exam = pd.read_csv('final_exam.csv')
final_exam

"""## Uji Normalitas
Ho = data berdistribusi normal

Ha = data tidak berdistribusi normal
"""

#Membuat histogram dari pandas dan matplotlib

final_exam.hist()
plt.show()

"""Terlihat beberapa datanya seperti tidak normal, mari kita coba uji Kolmogorov-Smirnov untuk mengeceknya"""

#Check normality using Kolmogorov-Smirnov Test
area = ['big_west', 'small_west', 'capital_city', 'small_east', 'big_east']
for a in area:
  z_score = stats.zscore(final_exam[a])
  normality = stats.kstest(z_score, 'norm', )
  print('normality for ', a, '=', normality)

"""## Latihan 3
Coba simpulkan apakah artinya data berdistribusi normal?

## Uji Homogenitas

Ho = varians semua kelompok cenderung sama (homogen)

Ha = varians semua kelompok cenderung tidak sama (homogen)
"""

#Uji Homogenitas dengan Levene
stats.levene(final_exam['big_west'], final_exam['small_west'], final_exam['capital_city']
             , final_exam['small_east'], final_exam['big_east'])

"""Karena p-value > 0.05, maka Ho diterima sehingga asumsi homogenitas dari ANOVA sudah terpenuhi

## Uji ANOVA (parametrik)

Ho = kualitas pendidikan merata (tidak ada perbedaan kualitas pendidikan yang signifikan antar wilayah)

Ha = kualitas pendidikan tidak merata (ada perbedaan kualitas pendidikan yang signifikan antar wilayah)
"""

stats.f_oneway(final_exam['big_west'], final_exam['small_west'], final_exam['capital_city']
             , final_exam['small_east'], final_exam['big_east'])

"""Karena p-value < 0.05, maka Ho ditolak, ternyata kualitas pendidikan di negara ini belum merata. Untuk itu, kamu perlu menyelidiki wilayah dengan rata-rata terendah agar kualitas sarana pendidikan dan gurunya bisa ditingkatkan"""

final_exam.describe()

"""Ternyata nilai rata-rata di ibukota jauh diatas wilayah lain, sementara kota kecil di timur mendapat nilai rata-rata terkecil. Sebagai menteri pendidikan berarti kamu harus membuat program untuk membangun sarana pendidikan yang lebih baik dan mengirim guru-guru terbaik ke kota kecil di wilayah timur.

## Uji Kruskal-Wallis (nonparametrik)
Jika datanya ternyata tidak berdistribusi normal atau tidak homogen, kamu bisa menggunakan uji Kruskal Wallis sebagai berikut
"""

stats.kruskal(final_exam['big_west'], final_exam['small_west'], final_exam['capital_city']
             , final_exam['small_east'], final_exam['big_east'])

"""## Latihan 4

Coba bikin kesimpulan dari hasil p-value tersebut

# Latihan tambahan

Misalkan kamu adalah data scientist di gojek. Kamu ingin mengetahui apakah kemacetan mempengaruhi tingkat kepuasan pelanggan. Jadi kamu ingin memebandingkan nilai "bintang" dari customer saat dia order di jam macet dan tidak macet.
(#hint = data dari customer yang sama)

macet = [2, 3, 5, 4, 5, 4, 4, 3, 4, 3, 4, 5, 4, 5, 4, 3, 4, 3, 3, 5, 4, 3, 4, 3, 4, 3, 4, 4, 5]

tidak_macet = [2, 2, 4, 5, 4, 3, 3, 3, 3, 3, 3, 4, 4, 5, 4, 3, 3, 2, 3, 4, 4, 3, 3, 3, 4, 3, 4, 3, 4]

1. Buat hipotesisnya
2. Lakukan uji asumsi normalitasnya
3. Jika datanya normal lakukan uji parametrik, jika tidak berdistribusi normal lakukan uji nonparametrik
4. Apa kesimpulan uji hipotesisnya?
"""

